<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hxj.Data</name>
    </assembly>
    <members>
        <member name="T:Hxj.Data.Common.EntityCache">
            <summary>
            实体信息缓存
            </summary>
        </member>
        <member name="F:Hxj.Data.Common.EntityCache.entityList">
            <summary>
            保存实体列表
            </summary>
        </member>
        <member name="F:Hxj.Data.Common.EntityCache.lockObj">
            <summary>
            lock object
            </summary>
        </member>
        <member name="M:Hxj.Data.Common.EntityCache.Reset">
            <summary>
            清空所有缓存
            </summary>
        </member>
        <member name="M:Hxj.Data.Common.EntityCache.Reset``1">
            <summary>
            清理具体实体的缓存
            </summary>
        </member>
        <member name="M:Hxj.Data.Common.EntityCache.GetTableName``1">
            <summary>
            返回表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.EntityCache.getTEntity``1">
            <summary>
            返回T
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.EntityCache.GetPrimaryKeyFields``1">
            <summary>
            获取主键字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.EntityCache.GetFields``1">
            <summary>
            返回所有字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.EntityCache.GetFirstField``1">
            <summary>
            返回第一个字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.EntityCache.GetIdentityField``1">
            <summary>
            返回标识字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.EntityCache.IsReadOnly``1">
            <summary>
            是否只读
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.EntityCache.GetSequence``1">
            <summary>
            标识列的名称（Oracle）
            </summary>
            <returns></returns>
        </member>
        <member name="T:Hxj.Data.SerializationManager">
            <summary>
            The serialization manager.
            </summary>
        </member>
        <member name="M:Hxj.Data.SerializationManager.Serialize(System.Object)">
            <summary>
            Serializes the specified obj.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.SerializationManager.Deserialize(System.Type,System.String)">
            <summary>
            Deserializes the specified return type.
            </summary>
            <param name="returnType">Type of the return.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.SerializationManager.RegisterSerializeHandler(System.Type,Hxj.Data.SerializationManager.TypeSerializeHandler,Hxj.Data.SerializationManager.TypeDeserializeHandler)">
            <summary>
            Registers the serialize handler.
            </summary>
            <param name="type">The type.</param>
            <param name="serializeHandler">The serialize handler.</param>
            <param name="deserializeHandler">The deserialize handler.</param>
        </member>
        <member name="M:Hxj.Data.SerializationManager.UnregisterSerializeHandler(System.Type)">
            <summary>
            Unregisters the serialize handler.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="T:Hxj.Data.SerializationManager.TypeSerializeHandler">
            <summary>
            The serialize delegate.
            </summary>
            <param name="obj">obj to be serialized.</param>
            <returns></returns>
        </member>
        <member name="T:Hxj.Data.SerializationManager.TypeDeserializeHandler">
            <summary>
            The deserialize delegate.
            </summary>
            <param name="data">the data to be deserialied.</param>
            <returns></returns>
        </member>
        <member name="T:Hxj.Data.ModifyField">
            <summary>
            实体属性修改记录 （字段修改记录）
            </summary>
        </member>
        <member name="M:Hxj.Data.ModifyField.#ctor(Hxj.Data.Field,System.Object,System.Object)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="oldValue">旧值</param>
            <param name="newValue">新值</param>
        </member>
        <member name="P:Hxj.Data.ModifyField.Field">
            <summary>
            字段
            </summary>
        </member>
        <member name="P:Hxj.Data.ModifyField.OldValue">
            <summary>
            原始值
            </summary>
        </member>
        <member name="P:Hxj.Data.ModifyField.NewValue">
            <summary>
            新值
            </summary>
        </member>
        <member name="T:Hxj.Data.Entity">
            <summary>
            实体信息
            </summary>
        </member>
        <member name="F:Hxj.Data.Entity.tableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="F:Hxj.Data.Entity.isAttached">
            <summary>
            是否
            </summary>
        </member>
        <member name="F:Hxj.Data.Entity.modifyFields">
            <summary>
            修改的字段集合
            </summary>
        </member>
        <member name="M:Hxj.Data.Entity.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Hxj.Data.Entity.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="tableName">表名</param>
        </member>
        <member name="M:Hxj.Data.Entity.Attach">
            <summary>
            将实体置为修改状态
            </summary>
        </member>
        <member name="M:Hxj.Data.Entity.DeAttach">
            <summary>
            将实体置为插入状态
            </summary>
        </member>
        <member name="M:Hxj.Data.Entity.OnPropertyValueChange(Hxj.Data.Field,System.Object,System.Object)">
            <summary>
            记录 字段修改  
            </summary>
            <param name="field"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Hxj.Data.Entity.ClearModifyFields">
            <summary>
            清除修改记录
            </summary>
        </member>
        <member name="M:Hxj.Data.Entity.SetPropertyValues(System.Data.IDataReader)">
            <summary>
            Sets the property values.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Hxj.Data.Entity.SetPropertyValues(System.Data.DataRow)">
            <summary>
            Sets the property values.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:Hxj.Data.Entity.GetFields">
            <summary>
            GetFields
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Entity.GetValues">
            <summary>
            GetValues
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Entity.GetPrimaryKeyFields">
            <summary>
            GetPrimaryKeyFields
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Entity.GetIdentityField">
            <summary>
            标识列
            </summary>
        </member>
        <member name="M:Hxj.Data.Entity.GetSequence">
            <summary>
            标识列的名称（例如如Oracle中Sequence名称）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Entity.GetModifyFields">
            <summary>
            返回修改记录
            </summary>
        </member>
        <member name="M:Hxj.Data.Entity.IsReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="M:Hxj.Data.Entity.GetTableName">
            <summary>
            获取表名
            </summary>
        </member>
        <member name="T:Hxj.Check">
            <summary>
            Design By Contract Checks.
            
            Each method generates an exception or
            a trace assertion statement if the contract is broken.
            </summary>
            <remarks>
            This example shows how to call the Require method.
            Assume DBC_CHECK_PRECONDITION is defined.
            <code>
            public void Test(int x)
            {
            	try
            	{
            		Check.Require(x > 1, "x must be > 1");
            	}
            	catch (System.Exception ex)
            	{
            		Console.WriteLine(ex.ToString());
            	}
            }
            </code>
            </remarks>
            
        </member>
        <member name="M:Hxj.Check.Require(System.Boolean,System.String)">
            <summary>
            Precondition check.
            </summary>
        </member>
        <member name="M:Hxj.Check.Require(System.Boolean,System.String,System.Exception)">
            <summary>
            Precondition check.
            </summary>
        </member>
        <member name="M:Hxj.Check.Require(System.Boolean)">
            <summary>
            Precondition check.
            </summary>
        </member>
        <member name="M:Hxj.Check.Require(System.Object,System.String,Hxj.Check.ICheckStrategy[])">
            <summary>
            Precondition check.
            </summary>
        </member>
        <member name="M:Hxj.Check.Ensure(System.Boolean,System.String)">
            <summary>
            Postcondition check.
            </summary>
        </member>
        <member name="M:Hxj.Check.Ensure(System.Boolean,System.String,System.Exception)">
            <summary>
            Postcondition check.
            </summary>
        </member>
        <member name="M:Hxj.Check.Ensure(System.Boolean)">
            <summary>
            Postcondition check.
            </summary>
        </member>
        <member name="M:Hxj.Check.Ensure(System.Object,System.String,Hxj.Check.ICheckStrategy[])">
            <summary>
            Postcondition check.
            </summary>
        </member>
        <member name="M:Hxj.Check.Invariant(System.Boolean,System.String)">
            <summary>
            Invariant check.
            </summary>
        </member>
        <member name="M:Hxj.Check.Invariant(System.Boolean,System.String,System.Exception)">
            <summary>
            Invariant check.
            </summary>
        </member>
        <member name="M:Hxj.Check.Invariant(System.Boolean)">
            <summary>
            Invariant check.
            </summary>
        </member>
        <member name="M:Hxj.Check.Invariant(System.Object,System.String,Hxj.Check.ICheckStrategy[])">
            <summary>
            Invariant check.
            </summary>
        </member>
        <member name="M:Hxj.Check.Assert(System.Boolean,System.String)">
            <summary>
            Assertion check.
            </summary>
        </member>
        <member name="M:Hxj.Check.Assert(System.Boolean,System.String,System.Exception)">
            <summary>
            Assertion check.
            </summary>
        </member>
        <member name="M:Hxj.Check.Assert(System.Boolean)">
            <summary>
            Assertion check.
            </summary>
        </member>
        <member name="M:Hxj.Check.Assert(System.Object,System.String,Hxj.Check.ICheckStrategy[])">
            <summary>
            Assertion check.
            </summary>
        </member>
        <member name="P:Hxj.Check.UseExceptions">
            <summary>
            Is exception handling being used?
            </summary>
        </member>
        <member name="T:Hxj.DesignByContractException">
            <summary>
            Exception raised when a contract is broken.
            Catch this exception type if you wish to differentiate between 
            any DesignByContract exception and other runtime exceptions.
             
            </summary>
        </member>
        <member name="M:Hxj.DesignByContractException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Hxj.DesignByContractException"/> class.
            </summary>
        </member>
        <member name="M:Hxj.DesignByContractException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Hxj.DesignByContractException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Hxj.DesignByContractException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Hxj.DesignByContractException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="T:Hxj.PreconditionException">
            <summary>
            Exception raised when a precondition fails.
            </summary>
        </member>
        <member name="M:Hxj.PreconditionException.#ctor">
            <summary>
            Precondition Exception.
            </summary>
        </member>
        <member name="M:Hxj.PreconditionException.#ctor(System.String)">
            <summary>
            Precondition Exception.
            </summary>
        </member>
        <member name="M:Hxj.PreconditionException.#ctor(System.String,System.Exception)">
            <summary>
            Precondition Exception.
            </summary>
        </member>
        <member name="T:Hxj.PostconditionException">
            <summary>
            Exception raised when a postcondition fails.
            </summary>
        </member>
        <member name="M:Hxj.PostconditionException.#ctor">
            <summary>
            Postcondition Exception.
            </summary>
        </member>
        <member name="M:Hxj.PostconditionException.#ctor(System.String)">
            <summary>
            Postcondition Exception.
            </summary>
        </member>
        <member name="M:Hxj.PostconditionException.#ctor(System.String,System.Exception)">
            <summary>
            Postcondition Exception.
            </summary>
        </member>
        <member name="T:Hxj.InvariantException">
            <summary>
            Exception raised when an invariant fails.
            </summary>
        </member>
        <member name="M:Hxj.InvariantException.#ctor">
            <summary>
            Invariant Exception.
            </summary>
        </member>
        <member name="M:Hxj.InvariantException.#ctor(System.String)">
            <summary>
            Invariant Exception.
            </summary>
        </member>
        <member name="M:Hxj.InvariantException.#ctor(System.String,System.Exception)">
            <summary>
            Invariant Exception.
            </summary>
        </member>
        <member name="T:Hxj.AssertionException">
            <summary>
            Exception raised when an assertion fails.
            </summary>
        </member>
        <member name="M:Hxj.AssertionException.#ctor">
            <summary>
            Assertion Exception.
            </summary>
        </member>
        <member name="M:Hxj.AssertionException.#ctor(System.String)">
            <summary>
            Assertion Exception.
            </summary>
        </member>
        <member name="M:Hxj.AssertionException.#ctor(System.String,System.Exception)">
            <summary>
            Assertion Exception.
            </summary>
        </member>
        <member name="F:Hxj.Data.CacheInfo.timeout">
            <summary>
            过期时间 单位：秒
            </summary>
        </member>
        <member name="F:Hxj.Data.CacheInfo.filePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="M:Hxj.Data.CacheInfo.IsNullOrEmpty">
            <summary>
            判断该cache是否为空
            </summary>
            <returns></returns>
        </member>
        <member name="P:Hxj.Data.CacheInfo.TimeOut">
            <summary>
            过期时间 单位：秒
            </summary>
        </member>
        <member name="P:Hxj.Data.CacheInfo.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="T:Hxj.Data.Common.EntityUtils">
            <summary>
            实体帮助类
            </summary>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.UpdateModel``1(``0)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Model</typeparam>
            <param name="t">model</param>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.UpdateModel``1(``0,System.String)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Model</typeparam>
            <param name="t">model</param>
            <param name="prefix">前缀</param>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.UpdateModel``1(``0,System.Collections.Specialized.NameValueCollection)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Model</typeparam>
            <param name="t">model</param>
            <param name="form">Request</param>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.UpdateModel``1(``0,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Entity</typeparam>
            <param name="t">Entity</param>
            <param name="form">Request</param>
            <param name="prefix">前缀</param>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.TryUpdateModel``1(``0)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Entity</typeparam>
            <param name="t">Entity</param>      
            <returns>转换是否成功</returns>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.TryUpdateModel``1(``0,System.String)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Entity</typeparam>
            <param name="t">Entity</param>    
            <param name="prefix">前缀</param>
            <returns>转换是否成功</returns>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.TryUpdateModel``1(``0,System.Collections.Specialized.NameValueCollection)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Entity</typeparam>
            <param name="t">Entity</param>
            <param name="form">Request</param>
            <returns>转换是否成功</returns>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.TryUpdateModel``1(``0,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Entity</typeparam>
            <param name="t">Entity</param>
            <param name="form">Request</param>
            <param name="prefix">前缀</param>
            <returns>转换是否成功</returns>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.SetDocumentValue``1(``0)">
            <summary>
            设置Web页面的值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.SetDocumentValue(System.Collections.Generic.Dictionary{Hxj.Data.Field,System.Object})">
            <summary>
            设置Web页面的值
            </summary>
            <param name="fieldvalues"></param>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.SetDocumentValue(System.Collections.Generic.Dictionary{Hxj.Data.Field,System.Object},System.String)">
            <summary>
            设置Web页面的值
            </summary>
            <param name="fieldvalues"></param>
            <param name="prefix"></param>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.SetDocumentValueString(System.Collections.Generic.Dictionary{Hxj.Data.Field,System.Object},System.String)">
            <summary>
            返回赋值的脚本
            </summary>
            <param name="fieldvalues"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.SetDocumentValueString``1(``0,System.String)">
            <summary>
            返回赋值的脚本
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="prefix"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.SetDocumentValueString(Hxj.Data.Field[],System.Object[],System.String)">
            <summary>
            返回赋值的脚本
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.SetDocumentValue``1(``0,System.String)">
            <summary>
            设置Web页面的值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="prefix"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.SetDocumentValue(Hxj.Data.Field[],System.Object[])">
            <summary>
            设置Web页面值
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.SetDocumentValue(Hxj.Data.Field[],System.Object[],System.String)">
            <summary>
            设置Web页面值
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="prefix"></param>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.SetDocumentValueClear``1(System.String)">
            <summary>
            清空Web页面的值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="prefix"></param>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.SetDocumentValueClearString``1(System.String)">
            <summary>
            返回清空Web页面的值的脚本
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="prefix"></param>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.GetField``1(System.String)">
            <summary>
            根据字段名返回实体字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldName"></param>
            <returns>返回null 就表示字段不存在</returns>
        </member>
        <member name="M:Hxj.Data.Common.EntityUtils.SetValue``1(``0,``0)">
            <summary>
            实体赋值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="toEntity">被赋值实体</param>
            <param name="fromEntity">来源实体</param>
            <returns>返回null 就表示fromEntity==null</returns>
        </member>
        <member name="T:Hxj.Data.Field`1">
            <summary>
            字段信息   
            </summary>
            <typeparam name="T">实体</typeparam>
        </member>
        <member name="T:Hxj.Data.Field">
            <summary>
            字段信息
            </summary>
        </member>
        <member name="F:Hxj.Data.Field.likeString">
            <summary>
            LIKE %
            </summary>
        </member>
        <member name="F:Hxj.Data.Field.selectInString">
            <summary>
            IN
            </summary>
        </member>
        <member name="F:Hxj.Data.Field.selectNotInString">
            <summary>
            NOT IN
            </summary>
        </member>
        <member name="M:Hxj.Data.Field.#ctor">
            <summary>
            空的构造函数
            </summary>
        </member>
        <member name="M:Hxj.Data.Field.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:Hxj.Data.Field.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName"></param>
            <param name="tableName"></param>
        </member>
        <member name="M:Hxj.Data.Field.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName"></param>
            <param name="tableName"></param>
            <param name="description"></param>
        </member>
        <member name="M:Hxj.Data.Field.#ctor(System.String,System.String,System.Nullable{System.Data.DbType},System.Nullable{System.Int32},System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName"></param>
            <param name="tableName"></param>
            <param name="parameterDbType"></param>
            <param name="parameterSize"></param>
            <param name="description"></param>
        </member>
        <member name="M:Hxj.Data.Field.#ctor(System.String,System.String,System.Nullable{System.Data.DbType},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName"></param>
            <param name="tableName"></param>
            <param name="parameterDbType"></param>
            <param name="parameterSize"></param>
            <param name="description"></param>
            <param name="aliasName"></param>
        </member>
        <member name="F:Hxj.Data.Field.fieldName">
            <summary>
            字段名
            </summary>
        </member>
        <member name="F:Hxj.Data.Field.tableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="F:Hxj.Data.Field.aliasName">
            <summary>
            字段别名
            </summary>
        </member>
        <member name="F:Hxj.Data.Field.description">
            <summary>
            字段描述
            </summary>
        </member>
        <member name="F:Hxj.Data.Field.parameterDbType">
            <summary>
            字段数据库中类型
            </summary>
        </member>
        <member name="F:Hxj.Data.Field.parameterSize">
            <summary>
            字段数据库中长度
            </summary>
        </member>
        <member name="F:Hxj.Data.Field.All">
            <summary>
            所有字段   就是  *  
            </summary>
        </member>
        <member name="M:Hxj.Data.Field.Equals(Hxj.Data.Field)">
            <summary>
            比较
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.IsNullOrEmpty(Hxj.Data.Field)">
            <summary>
            判断是否为空
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.SetTableName(System.String)">
            <summary>
            设置所属表名
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.As(System.String)">
            <summary>
            AS
            </summary>
            <param name="aliasName"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.As(Hxj.Data.Field)">
            <summary>
            AS
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.IsNull(Hxj.Data.Field)">
            <summary>
            判断字段是否为Null
            </summary>
            <param name="field">字段实体</param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.IsNull(System.Object)">
            <summary>
            判断字段是否为Null
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.Count">
            <summary>
            Count
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.Distinct">
            <summary>
            Distinct
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.Sum">
            <summary>
            Sum
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.Avg">
            <summary>
            Avg
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.Len">
            <summary>
            len
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.Trim">
            <summary>
            ltrim and  rtrim
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.Max">
            <summary>
            Max
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.Min">
            <summary>
            Min
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.Left(System.Int32)">
            <summary>
            Left
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.Right(System.Int32)">
            <summary>
            Right
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.Substring(System.Int32,System.Int32)">
            <summary>
            substring
            </summary>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.IndexOf(System.String)">
            <summary>
            charindex
            </summary>
            <param name="subString"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.Replace(System.String,System.String)">
            <summary>
            replace
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.createWhereClip(Hxj.Data.Field,Hxj.Data.Field,Hxj.Data.QueryOperator)">
            <summary>
            创建whereclip
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <param name="oper"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.createField(Hxj.Data.Field,Hxj.Data.Field,Hxj.Data.QueryOperator)">
            <summary>
            创建Field
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <param name="oper"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Hxj.Data.Field.BitwiseAND(Hxj.Data.Field)”忽略有格式错误的 XML 注释 -->
        <member name="M:Hxj.Data.Field.BitwiseOR(Hxj.Data.Field)">
            <summary>
            |
            </summary>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.BitwiseXOR(Hxj.Data.Field)">
            <summary>
            ^
            </summary>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.BitwiseNOT(Hxj.Data.Field)">
            <summary>
            ~
            </summary>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.Contain(System.Object)">
            <summary>
            Contain  
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.BeginWith(System.Object)">
            <summary>
            BeginWith  
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.EndWith(System.Object)">
            <summary>
            EndWith  
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.selectInOrNotIn``1(Hxj.Data.Field,System.String,``0[])">
            <summary>
            子查询
            </summary>
            <param name="field"></param>
            <param name="join"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.selectInOrNotIn``1(Hxj.Data.Field,System.String,System.Boolean,``0[])">
            <summary>
            子查询
            </summary>
            <param name="field"></param>
            <param name="join"></param>
            <param name="isParameter">是否参数化</param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.SelectIn(System.Object[])">
            <summary>
            SelectIn  
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.SelectIn``1(``0[])">
            <summary>
            SelectIn  
            </summary>
            <param name="values"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.SelectNotIn(System.Object[])">
            <summary>
            SelectNotIn  
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.SelectNotIn``1(``0[])">
            <summary>
            SelectNotIn  
            </summary>
            <param name="values"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.SubQueryIn(Hxj.Data.FromSection)">
            <summary>
            SubQueryIn   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.SubQueryNotIn(Hxj.Data.FromSection)">
            <summary>
            SubQueryNotIn   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.subQuery(Hxj.Data.Field,Hxj.Data.FromSection,Hxj.Data.QueryOperator)">
            <summary>
            组合 子查询
            </summary>
            <param name="field"></param>
            <param name="from"></param>
            <param name="oper"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.subQuery(Hxj.Data.Field,Hxj.Data.FromSection,System.String)">
            <summary>
            组合 子查询
            </summary>
            <param name="field"></param>
            <param name="from"></param>
            <param name="join"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.SubQueryEqual(Hxj.Data.FromSection)">
            <summary>
            SubQueryEqual   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.SubQueryNotEqual(Hxj.Data.FromSection)">
            <summary>
            SubQueryNotEqual   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.SubQueryLess(Hxj.Data.FromSection)">
            <summary>
            SubQueryLess   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.SubQueryLessOrEqual(Hxj.Data.FromSection)">
            <summary>
            SubQueryLessOrEqual   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.SubQueryGreater(Hxj.Data.FromSection)">
            <summary>
            SubQueryGreater   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.SubQueryGreaterOrEqual(Hxj.Data.FromSection)">
            <summary>
            SubQueryGreaterOrEqual   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.IsNull">
            <summary>
            字段 为null <example>field is null</example>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.Between(System.Object,System.Object)">
            <summary>
            Between操作
            </summary>
            <example>
            <![CDATA[ a>=value and a<=value ]]>
            </example>
            <param name="leftValue"></param>
            <param name="rightValue"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.op_Addition(Hxj.Data.Field,Hxj.Data.Field)">
            <summary>
            +
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.op_Subtraction(Hxj.Data.Field,Hxj.Data.Field)">
            <summary>
            -
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.op_Multiply(Hxj.Data.Field,Hxj.Data.Field)">
            <summary>
            *
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.op_Division(Hxj.Data.Field,Hxj.Data.Field)">
            <summary>
            /
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.op_Modulus(Hxj.Data.Field,Hxj.Data.Field)">
            <summary>
            %
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.op_Addition(Hxj.Data.Field,System.Object)">
            <summary>
            +
            </summary>
            <param name="leftField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.op_Subtraction(Hxj.Data.Field,System.Object)">
            <summary>
            -
            </summary>
            <param name="leftField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.op_Multiply(Hxj.Data.Field,System.Object)">
            <summary>
            *
            </summary>
            <param name="leftField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.op_Division(Hxj.Data.Field,System.Object)">
            <summary>
            /
            </summary>
            <param name="leftField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.op_Modulus(Hxj.Data.Field,System.Object)">
            <summary>
            %
            </summary>
            <param name="leftField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.op_Addition(System.Object,Hxj.Data.Field)">
            <summary>
            +
            </summary>
            <param name="value"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.op_Subtraction(System.Object,Hxj.Data.Field)">
            <summary>
            -
            </summary>
            <param name="value"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.op_Multiply(System.Object,Hxj.Data.Field)">
            <summary>
            *
            </summary>
            <param name="value"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.op_Division(System.Object,Hxj.Data.Field)">
            <summary>
            /
            </summary>
            <param name="value"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Field.op_Modulus(System.Object,Hxj.Data.Field)">
            <summary>
            %
            </summary>
            <param name="value"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="P:Hxj.Data.Field.ParameterDbType">
            <summary>
            字段数据库中类型
            </summary>
        </member>
        <member name="P:Hxj.Data.Field.ParameterSize">
            <summary>
            字段数据库中长度
            </summary>
        </member>
        <member name="P:Hxj.Data.Field.FieldName">
            <summary>
            返回 字段名
            </summary>
        </member>
        <member name="P:Hxj.Data.Field.TableName">
            <summary>
            返回  表名
            </summary>
        </member>
        <member name="P:Hxj.Data.Field.Name">
            <summary>
            返回  别名，当别名为空返回字段名
            </summary>
        </member>
        <member name="P:Hxj.Data.Field.PropertyName">
            <summary>
            返回属性名  既 fileName
            </summary>
        </member>
        <member name="P:Hxj.Data.Field.AliasName">
            <summary>
            返回  别名
            </summary>
        </member>
        <member name="P:Hxj.Data.Field.Description">
            <summary>
            返回  字段描述
            </summary>
        </member>
        <member name="P:Hxj.Data.Field.TableFieldName">
            <summary>
            返回  表名.字段名
            </summary>
        </member>
        <member name="P:Hxj.Data.Field.FullName">
            <summary>
            返回  表名.字段名 AS 别名
            </summary>
        </member>
        <member name="P:Hxj.Data.Field.Year">
            <summary>
            datepart   year
            </summary>
        </member>
        <member name="P:Hxj.Data.Field.Month">
            <summary>
            datepart   month
            </summary>
        </member>
        <member name="P:Hxj.Data.Field.Day">
            <summary>
            datepart  day
            </summary>
        </member>
        <member name="P:Hxj.Data.Field.Desc">
            <summary>
            倒叙
            </summary>
        </member>
        <member name="P:Hxj.Data.Field.Asc">
            <summary>
            正序
            </summary>
        </member>
        <member name="P:Hxj.Data.Field.GroupBy">
            <summary>
            分组
            </summary>
        </member>
        <member name="M:Hxj.Data.Field`1.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fileName">字段名</param>
        </member>
        <member name="T:Hxj.Data.CacheConfiguration">
            <summary>
            缓存设置
            </summary>
        </member>
        <member name="F:Hxj.Data.CacheConfiguration.enableCache">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:Hxj.Data.CacheConfiguration.Enable">
            <summary>
            是否开启缓存
            </summary>
        </member>
        <member name="P:Hxj.Data.CacheConfiguration.Entities">
            <summary>
            设置表缓存
            </summary>
        </member>
        <member name="T:Hxj.Data.ProcSection">
            <summary>
            执行存储过程
            </summary>
        </member>
        <member name="T:Hxj.Data.Section">
            <summary>
            Section
            </summary>
        </member>
        <member name="M:Hxj.Data.Section.ToScalar">
            <summary>
            返回单个值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Section.ToScalar``1">
            <summary>
            返回单个值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Section.ToFirst``1">
            <summary>
            返回单个实体
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Section.ToFirstDefault``1">
            <summary>
            返回单个实体
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Section.ToList``1">
            <summary>
            返回实体列表
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Section.ToDataReader">
            <summary>
            返回DataReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Section.ToDataSet">
            <summary>
            返回DataSet
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Section.ToDataTable">
            <summary>
            返回DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Section.ExecuteNonQuery">
            <summary>
            执行ExecuteNonQuery
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.ProcSection.#ctor(Hxj.Data.DbSession,System.String)">
            <summary>
            
            </summary>
            <param name="dbSession"></param>
            <param name="procName"></param>
        </member>
        <member name="F:Hxj.Data.ProcSection.outParameters">
            <summary>
            返回的参数
            </summary>
        </member>
        <member name="M:Hxj.Data.ProcSection.SetDbTransaction(System.Data.Common.DbTransaction)">
            <summary>
            设置事务
            </summary>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.ProcSection.getParameterName(System.String)">
            <summary>
            获取参数名字
            </summary>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.ProcSection.GetReturnValues">
            <summary>
            返回存储过程返回值
            </summary>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Hxj.Data.ProcSection.AddParameter(System.Data.Common.DbParameter[])”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Hxj.Data.ProcSection.AddInParameter(System.String,System.Data.DbType,System.Object)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Hxj.Data.ProcSection.AddInParameter(System.String,System.Data.DbType,System.Int32,System.Object)”忽略有格式错误的 XML 注释 -->
        <member name="M:Hxj.Data.ProcSection.AddOutParameter(System.String,System.Data.DbType)">
            <summary>
            添加输出参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.ProcSection.AddOutParameter(System.String,System.Data.DbType,System.Int32)">
            <summary>
            添加输出参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.ProcSection.AddInputOutputParameter(System.String,System.Data.DbType,System.Object)">
            <summary>
            添加输入输出参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.ProcSection.AddInputOutputParameter(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            添加输入输出参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.ProcSection.AddReturnValueParameter(System.String,System.Data.DbType)">
            <summary>
            添加返回参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.ProcSection.AddReturnValueParameter(System.String,System.Data.DbType,System.Int32)">
            <summary>
            添加返回参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.ProcSection.executeBefore">
            <summary>
            操作参数名称
            </summary>
        </member>
        <member name="M:Hxj.Data.ProcSection.ToScalar">
            <summary>
            返回单个值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.ProcSection.ToDataReader">
            <summary>
            返回DataReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.ProcSection.ToDataSet">
            <summary>
            返回DataSet
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.ProcSection.ExecuteNonQuery">
            <summary>
            执行ExecuteNonQuery
            </summary>
            <returns></returns>
        </member>
        <member name="P:Hxj.Data.ProcSection.isParameterSpecial">
            <summary>
            存储过程参数不要加前缀
            </summary>
        </member>
        <member name="T:Hxj.Data.SqlServer9.SqlServer9Provider">
            <summary>
            Sql Server 2005
            </summary>
        </member>
        <member name="T:Hxj.Data.SqlServer.SqlServerProvider">
            <summary>
            SqlServer 
            </summary>
        </member>
        <member name="T:Hxj.Data.DbProvider">
            <summary>
            DbProvider
            </summary>
        </member>
        <member name="F:Hxj.Data.DbProvider.leftToken">
            <summary>
            【
            </summary>
        </member>
        <member name="F:Hxj.Data.DbProvider.paramPrefixToken">
            <summary>
            参数前缀
            </summary>
        </member>
        <member name="F:Hxj.Data.DbProvider.rightToken">
            <summary>
            】
            </summary>
        </member>
        <member name="F:Hxj.Data.DbProvider.dbProviderFactory">
            <summary>
            The db provider factory.
            </summary>
        </member>
        <member name="F:Hxj.Data.DbProvider.dbConnStrBuilder">
            <summary>
            The db connection string builder
            </summary>
        </member>
        <member name="M:Hxj.Data.DbProvider.#ctor(System.String,System.Data.Common.DbProviderFactory,System.Char,System.Char,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:DbProvider"/> class.
            </summary>
            <param name="connectionString">The conn STR.</param>
            <param name="dbProviderFactory">The db provider factory.</param>
            <param name="leftToken">leftToken</param>
            <param name="paramPrefixToken">paramPrefixToken</param>
            <param name="rightToken">rightToken</param>
        </member>
        <member name="F:Hxj.Data.DbProvider.cacheConfig">
            <summary>
            缓存
            </summary>
        </member>
        <member name="F:Hxj.Data.DbProvider.entitiesCache">
            <summary>
            实体缓存
            </summary>
        </member>
        <member name="M:Hxj.Data.DbProvider.BuildParameterName(System.String)">
            <summary>
            Builds the name of the parameter.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbProvider.BuildTableName(System.String)">
            <summary>
            Builds the name of the table.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbProvider.CreatePageFromSection(Hxj.Data.FromSection,System.Int32,System.Int32)">
            <summary>
            创建分页查询
            </summary>
            <param name="fromSection"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbProvider.PrepareCommand(System.Data.Common.DbCommand)">
            <summary>
            调整DbCommand命令
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="P:Hxj.Data.DbProvider.ConnectionStringsName">
            <summary>
            ConnectionStrings 节点名称
            </summary>
        </member>
        <member name="P:Hxj.Data.DbProvider.ConnectionString">
            <summary>
            Gets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Hxj.Data.DbProvider.DbProviderFactory">
            <summary>
            Gets the db provider factory.
            </summary>
            <value>The db provider factory.</value>
        </member>
        <member name="P:Hxj.Data.DbProvider.ParamPrefix">
            <summary>
            Gets the param prefix.
            </summary>
            <value>The param prefix.</value>
        </member>
        <member name="P:Hxj.Data.DbProvider.LeftToken">
            <summary>
            Gets the left token of table name or column name.
            </summary>
            <value>The left token.</value>
        </member>
        <member name="P:Hxj.Data.DbProvider.RightToken">
            <summary>
            Gets the right token of table name or column name.
            </summary>
            <value>The right token.</value>
        </member>
        <member name="P:Hxj.Data.DbProvider.CacheConfig">
            <summary>
            缓存配置
            </summary>
        </member>
        <member name="P:Hxj.Data.DbProvider.EntitiesCache">
            <summary>
            实体缓存
            </summary>
        </member>
        <member name="P:Hxj.Data.DbProvider.RowAutoID">
            <summary>
            自增长字段查询语句
            </summary>
        </member>
        <member name="P:Hxj.Data.DbProvider.SupportBatch">
            <summary>
            是否支持批量sql提交
            </summary>
        </member>
        <member name="M:Hxj.Data.SqlServer.SqlServerProvider.BuildParameterName(System.String)">
            <summary>
            Builds the name of the parameter.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.SqlServer9.SqlServer9Provider.CreatePageFromSection(Hxj.Data.FromSection,System.Int32,System.Int32)">
            <summary>
            创建分页查询
            </summary>
            <param name="fromSection"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="T:Hxj.Data.OrderByOperater">
            <summary>
            排序类型
            </summary>
        </member>
        <member name="T:Hxj.Data.OrderByClip">
            <summary>
            排序
            </summary>
        </member>
        <member name="F:Hxj.Data.OrderByClip.None">
            <summary>
            null
            </summary>
        </member>
        <member name="M:Hxj.Data.OrderByClip.IsNullOrEmpty(Hxj.Data.OrderByClip)">
            <summary>
            判断 OrderByClip  是否为null
            </summary>
            <param name="orderByClip"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.OrderByClip.op_BitwiseAnd(Hxj.Data.OrderByClip,Hxj.Data.OrderByClip)">
            <summary>
            两个OrderByClip相加
            </summary>
            <param name="leftOrderByClip"></param>
            <param name="rightOrderByClip"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.OrderByClip.RemovePrefixTableName">
            <summary>
            去掉的表前缀
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.OrderByClip.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.OrderByClip.Equals(Hxj.Data.OrderByClip)">
            <summary>
            比较
            </summary>
            <param name="orderByClip"></param>
            <returns></returns>
        </member>
        <member name="P:Hxj.Data.OrderByClip.ReverseOrderByClip">
            <summary>
            倒叙
            </summary>
        </member>
        <member name="P:Hxj.Data.OrderByClip.OrderByString">
            <summary>
            OrderByString
            <example>
            order by id desc
            </example>
            </summary>
        </member>
        <member name="T:Hxj.Data.GroupByClip">
            <summary>
            分组
            </summary>
        </member>
        <member name="M:Hxj.Data.GroupByClip.IsNullOrEmpty(Hxj.Data.GroupByClip)">
            <summary>
            判断 GroupByClip  是否为null
            </summary>
            <param name="groupByClip"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.GroupByClip.op_BitwiseAnd(Hxj.Data.GroupByClip,Hxj.Data.GroupByClip)">
            <summary>
            两个GroupByClip相加
            </summary>
            <param name="leftGroupByClip"></param>
            <param name="rightGroupByClip"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.GroupByClip.RemovePrefixTableName">
            <summary>
            去掉的表前缀
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.GroupByClip.op_True(Hxj.Data.GroupByClip)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.GroupByClip.op_False(Hxj.Data.GroupByClip)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.GroupByClip.Equals(Hxj.Data.GroupByClip)">
            <summary>
            比较
            </summary>
            <param name="groupByClip"></param>
            <returns></returns>
        </member>
        <member name="P:Hxj.Data.GroupByClip.GroupByString">
            <summary>
            GroupByString
            <example>
            group by id
            </example>
            </summary>
        </member>
        <member name="T:Hxj.Data.CommandCreator">
            <summary>
            Command Creator
            </summary>
        </member>
        <member name="F:Hxj.Data.CommandCreator.db">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hxj.Data.CommandCreator.#ctor(Hxj.Data.Database)">
            <summary>
            
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:Hxj.Data.CommandCreator.CreateUpdateCommand``1(``0,Hxj.Data.WhereClip)">
            <summary>
            创建更新DbCommand
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.CommandCreator.CreateUpdateCommand``1(Hxj.Data.Field[],System.Object[],Hxj.Data.WhereClip)">
            <summary>
            创建更新DbCommand
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.CommandCreator.CreateDeleteCommand(System.String,Hxj.Data.WhereClip)">
            <summary>
            创建删除DbCommand
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.CommandCreator.CreateDeleteCommand``1(Hxj.Data.WhereClip)">
            <summary>
            创建删除DbCommand
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.CommandCreator.CreateInsertCommand``1(Hxj.Data.Field[],System.Object[])">
            <summary>
            创建添加DbCommand
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.CommandCreator.CreateInsertCommand``1(``0)">
            <summary>
            创建添加DbCommand
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:Hxj.Data.QueryOperator">
            <summary>
            比较类型
            </summary>
        </member>
        <member name="F:Hxj.Data.QueryOperator.Equal">
            <summary>
            ==
            </summary>
        </member>
        <!-- 对于成员“F:Hxj.Data.QueryOperator.NotEqual”忽略有格式错误的 XML 注释 -->
        <member name="F:Hxj.Data.QueryOperator.Greater">
            <summary>
            >
            </summary>
        </member>
        <!-- 对于成员“F:Hxj.Data.QueryOperator.Less”忽略有格式错误的 XML 注释 -->
        <member name="F:Hxj.Data.QueryOperator.GreaterOrEqual">
            <summary>
            >=
            </summary>
        </member>
        <!-- 对于成员“F:Hxj.Data.QueryOperator.LessOrEqual”忽略有格式错误的 XML 注释 -->
        <member name="F:Hxj.Data.QueryOperator.Like">
            <summary>
            LIKE
            </summary>
        </member>
        <!-- 对于成员“F:Hxj.Data.QueryOperator.BitwiseAND”忽略有格式错误的 XML 注释 -->
        <member name="F:Hxj.Data.QueryOperator.BitwiseOR">
            <summary>
            |
            </summary>
        </member>
        <member name="F:Hxj.Data.QueryOperator.BitwiseXOR">
            <summary>
            ^
            </summary>
        </member>
        <member name="F:Hxj.Data.QueryOperator.BitwiseNOT">
            <summary>
            ~
            </summary>
        </member>
        <member name="F:Hxj.Data.QueryOperator.IsNULL">
            <summary>
            IS NULL
            </summary>
        </member>
        <member name="F:Hxj.Data.QueryOperator.Add">
            <summary>
             +
            </summary>
        </member>
        <member name="F:Hxj.Data.QueryOperator.Subtract">
            <summary>
            -
            </summary>
        </member>
        <member name="F:Hxj.Data.QueryOperator.Multiply">
            <summary>
            *
            </summary>
        </member>
        <member name="F:Hxj.Data.QueryOperator.Divide">
            <summary>
            /
            </summary>
        </member>
        <member name="F:Hxj.Data.QueryOperator.Modulo">
            <summary>
            %
            </summary>
        </member>
        <member name="T:Hxj.Data.Parameter">
            <summary>
            参数
            </summary>
        </member>
        <member name="M:Hxj.Data.Parameter.#ctor(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="parameterName"></param>
            <param name="parameterValue"></param>
        </member>
        <member name="M:Hxj.Data.Parameter.#ctor(System.String,System.Object,System.Nullable{System.Data.DbType},System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="parameterName"></param>
            <param name="parameterValue"></param>
            <param name="parameterDbType"></param>
            <param name="parameterSize"></param>
        </member>
        <member name="P:Hxj.Data.Parameter.ParameterName">
            <summary>
            参数名称
            </summary>
        </member>
        <member name="P:Hxj.Data.Parameter.ParameterValue">
            <summary>
            参数值
            </summary>
        </member>
        <member name="P:Hxj.Data.Parameter.ParameterDbType">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:Hxj.Data.Parameter.ParameterSize">
            <summary>
            长度
            </summary>
        </member>
        <member name="T:Hxj.Data.Expression">
            <summary>
            表达式
            </summary>
        </member>
        <member name="F:Hxj.Data.Expression.expressionString">
            <summary>
            
            </summary>
        </member>
        <member name="F:Hxj.Data.Expression.parameters">
            <summary>
            参数
            </summary>
        </member>
        <member name="M:Hxj.Data.Expression.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Hxj.Data.Expression.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="expressionString"></param>
        </member>
        <member name="M:Hxj.Data.Expression.#ctor(System.String,Hxj.Data.Parameter[])">
            <summary>
            构造函数
            </summary>
            <param name="expressionString"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Hxj.Data.Expression.#ctor(Hxj.Data.Field,System.Object,Hxj.Data.QueryOperator)">
            <summary>
            构造函数
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <param name="oper"></param>
        </member>
        <member name="M:Hxj.Data.Expression.#ctor(Hxj.Data.Field,System.Object,Hxj.Data.QueryOperator,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <param name="oper"></param>
            <param name="isFieldBefore"></param>
        </member>
        <member name="M:Hxj.Data.Expression.ToString">
            <summary>
            返回组合字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:Hxj.Data.Expression.Parameters">
            <summary>
            返回参数
            </summary>
        </member>
        <member name="T:Hxj.Data.LogHandler">
            <summary>
            A delegate used for log.
            </summary>
            <param name="logMsg">The msg to write to log.</param>
        </member>
        <member name="T:Hxj.Data.ILogable">
            <summary>
            Mark a implementing class as loggable.
            </summary>
        </member>
        <member name="E:Hxj.Data.ILogable.OnLog">
            <summary>
            OnLog event.
            </summary>
        </member>
        <member name="T:Hxj.Data.SqlSection">
            <summary>
            执行sql语句
            </summary>
        </member>
        <member name="M:Hxj.Data.SqlSection.#ctor(Hxj.Data.DbSession,System.String)">
            <summary>
            
            </summary>
            <param name="dbSession"></param>
            <param name="sql"></param>
        </member>
        <member name="M:Hxj.Data.SqlSection.SetDbTransaction(System.Data.Common.DbTransaction)">
            <summary>
            设置事务
            </summary>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Hxj.Data.SqlSection.AddParameter(System.Data.Common.DbParameter[])”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Hxj.Data.SqlSection.AddInParameter(System.String,System.Data.DbType,System.Object)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Hxj.Data.SqlSection.AddInParameter(System.String,System.Data.DbType,System.Int32,System.Object)”忽略有格式错误的 XML 注释 -->
        <member name="T:Hxj.Data.ProviderFactory">
            <summary>
            The db provider factory.
            </summary>
        </member>
        <member name="M:Hxj.Data.ProviderFactory.CreateDbProvider(System.String,System.String,System.String)">
            <summary>
            Creates the db provider.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="className">Name of the class.</param>
            <param name="connectionString">The conn STR.</param>
            <returns>The db provider.</returns>
        </member>
        <member name="M:Hxj.Data.ProviderFactory.CreateDbProvider(System.String)">
            <summary>
            Creates the db provider.
            </summary>
            <param name="connStrName">Name of the conn STR.</param>
            <returns>The db provider.</returns>
        </member>
        <member name="P:Hxj.Data.ProviderFactory.Default">
            <summary>
            Gets the default db provider.
            </summary>
            <value>The default.</value>
        </member>
        <member name="T:Hxj.Data.DbBatch">
            <summary>
            批处理
            </summary>
        </member>
        <member name="F:Hxj.Data.DbBatch.cmdCreator">
            <summary>
            DbCommand生成器
            </summary>
        </member>
        <member name="F:Hxj.Data.DbBatch.batchcmd">
            <summary>
            批处理
            </summary>
        </member>
        <member name="F:Hxj.Data.DbBatch.isClose">
            <summary>
            是否已关闭
            </summary>
        </member>
        <member name="M:Hxj.Data.DbBatch.#ctor(Hxj.Data.CommandCreator,Hxj.Data.BatchCommander)">
            <summary>
            构造函数
            </summary>
            <param name="batchcmd"></param>
            <param name="cmdCreator"></param>
        </member>
        <member name="M:Hxj.Data.DbBatch.Execute">
            <summary>
            立即执行已挂起的批处理
            </summary>
        </member>
        <member name="M:Hxj.Data.DbBatch.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:Hxj.Data.DbBatch.Dispose">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:Hxj.Data.DbBatch.UpdateAll``1(``0[])">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Hxj.Data.DbBatch.UpdateAll``1(``0)">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Hxj.Data.DbBatch.UpdateAll``1(``0,Hxj.Data.WhereClip)">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbBatch.Update``1(``0[])">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Hxj.Data.DbBatch.Update``1(``0)">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Hxj.Data.DbBatch.Update``1(``0,Hxj.Data.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbBatch.Update``1(Hxj.Data.Field,System.Object,Hxj.Data.WhereClip)">
            <summary>
            更新单个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbBatch.Update``1(System.Collections.Generic.Dictionary{Hxj.Data.Field,System.Object},Hxj.Data.WhereClip)">
            <summary>
            更新多个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldValue"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbBatch.Update``1(Hxj.Data.Field[],System.Object[],Hxj.Data.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbBatch.Delete``1(``0)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbBatch.Delete``1(System.Object[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbBatch.Delete``1(System.String[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbBatch.Delete``1(Hxj.Data.WhereClip)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbBatch.Insert``1(``0[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbBatch.Insert``1(``0)">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbBatch.Insert``1(Hxj.Data.Field[],System.Object[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="T:Hxj.Data.Common.DataUtils">
            <summary>
            帮助类
            </summary>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.FormatSQL(System.String,System.Char,System.Char)">
            <summary>
            格式化sql
            </summary>
            <param name="sql"></param>
            <param name="leftToken"></param>
            <param name="rightToken"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.FormatValue(System.Object)">
            <summary>
            格式化数据为数据库通用格式
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.CheckStruct(System.Type)">
            <summary>
            CheckStuct
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.Clone(System.Object)">
            <summary>
            DeepClone
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.ConvertValue(System.Type,System.Object)">
            <summary>
            转换
            </summary>
            <param name="type"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.ConvertValue``1(System.Object)">
            <summary>
            转换数据类型
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.FastMethodInvoke(System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>
            快速执行Method
            </summary>
            <param name="obj"></param>
            <param name="method"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.Create``1">
            <summary>
            快速实例化一个T
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.Create(System.Type)">
            <summary>
            快速实例化一个FastCreateInstanceHandler
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.SetPropertyValue(System.Object,System.Reflection.PropertyInfo,System.Object)">
            <summary>
            设置属性值
            </summary>
            <param name="obj"></param>
            <param name="property"></param>
            <param name="value"></param>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.SetPropertyValue(System.Object,System.String,System.Object)">
            <summary>
            设置属性值
            </summary>
            <param name="obj"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.SetPropertyValue(System.Type,System.Object,System.String,System.Object)">
            <summary>
            设置属性值
            </summary>
            <param name="type"></param>
            <param name="obj"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.GetPropertyValue``1(``0,System.String)">
            <summary>
            获取属性值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.EntityArrayToDataTable``1(``0[])">
            <summary>
            从Entity数组转换成DataTable
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.DataRowToEntity``1(System.Data.DataRow)">
            <summary>
            DataRow转化为T
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.DataTableToEntityArray``1(System.Data.DataTable)">
            <summary>
            DataTable转化为TEntity[]
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.DataTableToEntityList``1(System.Data.DataTable)">
            <summary>
            DataTable转化为 List
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.MakeUniqueKey(System.String)">
            <summary>
            生成唯一字符串
            </summary>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.GetPrimaryKeyWhere(Hxj.Data.Entity)">
            <summary>
            生成主键条件
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.GetPrimaryKeyWhere``1(System.Object[])">
            <summary>
            生成主键条件
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.FieldValueToDictionary(Hxj.Data.Field[],System.Object[])">
            <summary>
            数组转成字典
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Common.DataUtils.ToString(Hxj.Data.QueryOperator)">
            <summary>
            
            </summary>
            <param name="op"></param>
            <returns></returns>
        </member>
        <member name="T:Hxj.Data.BatchCommander">
            <summary>
            BatchCommander is used to execute batch queries.
            </summary>
        </member>
        <member name="M:Hxj.Data.BatchCommander.ExecuteBatch">
            <summary>
            执行
            </summary>
        </member>
        <member name="M:Hxj.Data.BatchCommander.#ctor(Hxj.Data.Database,System.Int32,System.Data.IsolationLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:Hxj.Data.BatchCommander"/> class.
            </summary>
            <param name="db">The db.</param>
            <param name="batchSize">Size of the batch.</param>
            <param name="il">The il.</param>
        </member>
        <member name="M:Hxj.Data.BatchCommander.#ctor(Hxj.Data.Database,System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            Initializes a new instance of the <see cref="T:Hxj.Data.BatchCommander"/> class.
            </summary>
            <param name="db">The db.</param>
            <param name="batchSize">Size of the batch.</param>
            <param name="tran">The tran.</param>
        </member>
        <member name="M:Hxj.Data.BatchCommander.#ctor(Hxj.Data.Database,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Hxj.Data.BatchCommander"/> class.
            </summary>
            <param name="db">The db.</param>
            <param name="batchSize">Size of the batch.</param>
        </member>
        <member name="M:Hxj.Data.BatchCommander.Process(System.Data.Common.DbCommand)">
            <summary>
            Processes the specified CMD.
            </summary>
            <param name="cmd">The CMD.</param>
        </member>
        <member name="M:Hxj.Data.BatchCommander.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="T:Hxj.Data.DatabaseType">
            <summary>
            Type of a database.
            </summary>
        </member>
        <member name="F:Hxj.Data.DatabaseType.SqlServer">
            <summary>
            SQL Server 2000
            </summary>
        </member>
        <member name="F:Hxj.Data.DatabaseType.MsAccess">
            <summary>
            MsAccess
            </summary>
        </member>
        <member name="F:Hxj.Data.DatabaseType.SqlServer9">
            <summary>
            SQL Server 2005
            </summary>
        </member>
        <member name="F:Hxj.Data.DatabaseType.Oracle">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="F:Hxj.Data.DatabaseType.Sqlite3">
            <summary>
            Sqlite
            </summary>
        </member>
        <member name="F:Hxj.Data.DatabaseType.MySql">
            <summary>
            MySql
            </summary>
        </member>
        <member name="T:Hxj.Data.DbSession">
            <summary>
            DbSession
            </summary>
        </member>
        <member name="F:Hxj.Data.DbSession.Version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="F:Hxj.Data.DbSession.db">
            <summary>
            
            </summary>
        </member>
        <member name="F:Hxj.Data.DbSession.cmdCreator">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hxj.Data.DbSession.TurnOnCache">
            <summary>
            开启缓存
            </summary>
        </member>
        <member name="M:Hxj.Data.DbSession.TurnOffCache">
            <summary>
            关闭缓存
            </summary>
        </member>
        <member name="M:Hxj.Data.DbSession.BeginBatchConnection">
            <summary>
            开始批处理，默认10条sql组合
            </summary>
        </member>
        <member name="M:Hxj.Data.DbSession.BeginBatchConnection(System.Int32)">
            <summary>
            开始批处理
            </summary>
            <param name="batchSize">sql组合条数</param>
        </member>
        <member name="M:Hxj.Data.DbSession.BeginBatchConnection(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            开始批处理
            </summary>
            <param name="batchSize">sql组合条数</param>
            <param name="tran">事务</param>
        </member>
        <member name="M:Hxj.Data.DbSession.BeginBatchConnection(System.Int32,System.Data.IsolationLevel)">
            <summary>
            开始批处理
            </summary>
            <param name="batchSize">sql组合条数</param>
            <param name="il">事务</param>
        </member>
        <member name="F:Hxj.Data.DbSession.Default">
            <summary>
            Get the default gateway, which mapping to the default Database.
            </summary>
        </member>
        <member name="M:Hxj.Data.DbSession.SetDefault(Hxj.Data.DatabaseType,System.String)">
            <summary>
            Sets the default DbSession.
            </summary>
            <param name="dt">The dt.</param>
            <param name="connStr">The conn STR.</param>
        </member>
        <member name="M:Hxj.Data.DbSession.CreateDbProvider(Hxj.Data.DatabaseType,System.String)">
            <summary>
            Creates the db provider.
            </summary>
            <param name="dt">The dt.</param>
            <param name="connStr">The conn STR.</param>
            <returns>The db provider.</returns>
        </member>
        <member name="M:Hxj.Data.DbSession.SetDefault(System.String,System.String,System.String)">
            <summary>
            Sets the default DbSession.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="className">Name of the class.</param>
            <param name="connStr">The conn STR.</param>
        </member>
        <member name="M:Hxj.Data.DbSession.SetDefault(System.String)">
            <summary>
            Sets the default DbSession.
            </summary>
            <param name="connStrName">Name of the conn STR.</param>
        </member>
        <member name="M:Hxj.Data.DbSession.#ctor">
            <summary>
            构造函数    使用默认  DbSession.Default
            </summary>
        </member>
        <member name="M:Hxj.Data.DbSession.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="connStrName">config文件中connectionStrings节点的name</param>
        </member>
        <member name="M:Hxj.Data.DbSession.#ctor(Hxj.Data.Database)">
            <summary>
            构造函数
            </summary>
            <param name="db">已知的Database</param>
        </member>
        <member name="M:Hxj.Data.DbSession.#ctor(Hxj.Data.DatabaseType,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="dt">数据库类别</param>
            <param name="connStr">连接字符串</param>
        </member>
        <member name="M:Hxj.Data.DbSession.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="assemblyName">程序集</param>
            <param name="className">类名</param>
            <param name="connStr">连接字符串</param>
        </member>
        <member name="M:Hxj.Data.DbSession.From``1">
            <summary>
            查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.From(System.String)">
            <summary>
            查询
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Sum``1(Hxj.Data.Field,Hxj.Data.WhereClip)">
            <summary>
            Sum
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Max``1(Hxj.Data.Field,Hxj.Data.WhereClip)">
            <summary>
            Max
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Min``1(Hxj.Data.Field,Hxj.Data.WhereClip)">
            <summary>
            Min
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Avg``1(Hxj.Data.Field,Hxj.Data.WhereClip)">
            <summary>
            Avg
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Sum``2(Hxj.Data.Field,Hxj.Data.WhereClip)">
            <summary>
            Sum
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Max``2(Hxj.Data.Field,Hxj.Data.WhereClip)">
            <summary>
            Max
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Min``2(Hxj.Data.Field,Hxj.Data.WhereClip)">
            <summary>
            Min
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Avg``2(Hxj.Data.Field,Hxj.Data.WhereClip)">
            <summary>
            Avg
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Exists``1(Hxj.Data.WhereClip)">
            <summary>
            判断是否存在记录
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Count``1(Hxj.Data.Field,Hxj.Data.WhereClip)">
            <summary>
            Count
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Count``1(Hxj.Data.WhereClip)">
            <summary>
            Count
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.RegisterSqlLogger(Hxj.Data.LogHandler)">
            <summary>
            Registers the SQL logger.
            </summary>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Hxj.Data.DbSession.UnregisterSqlLogger(Hxj.Data.LogHandler)">
            <summary>
            Unregisters the SQL logger.
            </summary>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Hxj.Data.DbSession.BeginTransaction">
            <summary>
            Begins the transaction.
            </summary>
            <returns>The begined transaction.</returns>
        </member>
        <member name="M:Hxj.Data.DbSession.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="il">The il.</param>
            <returns>The begined transaction.</returns>
        </member>
        <member name="M:Hxj.Data.DbSession.CloseTransaction(System.Data.Common.DbTransaction)">
            <summary>
            Closes the transaction.
            </summary>
            <param name="tran">The tran.</param>
        </member>
        <member name="M:Hxj.Data.DbSession.BuildDbParamName(System.String)">
            <summary>
            Builds the name of the db param.
            </summary>
            <param name="name">The name.</param>
            <returns>The name of the db param</returns>
        </member>
        <member name="M:Hxj.Data.DbSession.UpdateAll``1(``0)">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Hxj.Data.DbSession.UpdateAll``1(``0[])">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Hxj.Data.DbSession.UpdateAll``1(System.Data.Common.DbTransaction,``0[])">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entities"></param>
        </member>
        <member name="M:Hxj.Data.DbSession.UpdateAll``1(``0,Hxj.Data.WhereClip)">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.UpdateAll``1(``0,System.Data.Common.DbTransaction)">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Hxj.Data.DbSession.UpdateAll``1(``0,Hxj.Data.WhereClip,System.Data.Common.DbTransaction)">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="where"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Hxj.Data.DbSession.Update``1(``0)">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Hxj.Data.DbSession.Update``1(``0[])">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Hxj.Data.DbSession.Update``1(``0,Hxj.Data.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Update``1(``0,System.Data.Common.DbTransaction)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Hxj.Data.DbSession.Update``1(System.Data.Common.DbTransaction,``0[])">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entities"></param>
        </member>
        <member name="M:Hxj.Data.DbSession.Update``1(``0,Hxj.Data.WhereClip,System.Data.Common.DbTransaction)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="where"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Hxj.Data.DbSession.Update``1(Hxj.Data.Field,System.Object,Hxj.Data.WhereClip)">
            <summary>
            更新单个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Update``1(Hxj.Data.Field,System.Object,Hxj.Data.WhereClip,System.Data.Common.DbTransaction)">
            <summary>
            更新单个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Update``1(System.Collections.Generic.Dictionary{Hxj.Data.Field,System.Object},Hxj.Data.WhereClip)">
            <summary>
            更新多个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldValue"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Update``1(System.Collections.Generic.Dictionary{Hxj.Data.Field,System.Object},Hxj.Data.WhereClip,System.Data.Common.DbTransaction)">
            <summary>
            更新多个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldValue"></param>
            <param name="where"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Update``1(Hxj.Data.Field[],System.Object[],Hxj.Data.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Update``1(Hxj.Data.Field[],System.Object[],Hxj.Data.WhereClip,System.Data.Common.DbTransaction)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Delete``1(``0)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Delete``1(``0,System.Data.Common.DbTransaction)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Delete``1(System.Object[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Delete``1(System.String[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.DeleteByPrimaryKey``1(System.Object[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Delete``1(System.Data.Common.DbTransaction,System.Object[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Delete``1(System.Data.Common.DbTransaction,System.String[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.DeleteByPrimaryKey``1(System.Data.Common.DbTransaction,System.Object[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Delete``1(Hxj.Data.WhereClip,System.Data.Common.DbTransaction)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Delete``1(Hxj.Data.WhereClip)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Insert``1(``0[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Insert``1(``0)">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Insert``1(``0,System.Data.Common.DbTransaction)">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Insert``1(System.Data.Common.DbTransaction,``0[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Insert``1(Hxj.Data.Field[],System.Object[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.Insert``1(Hxj.Data.Field[],System.Object[],System.Data.Common.DbTransaction)">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.insertExecute``1(System.Data.Common.DbCommand)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.insertExecute``1(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="cmd"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            执行ExecuteNonQuery
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.ExecuteNonQuery(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            执行ExecuteNonQuery
            </summary>
            <param name="cmd"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.ExecuteScalar(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            执行ExecuteScalar
            </summary>
            <param name="cmd"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            执行ExecuteScalar
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            执行ExecuteReader
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.ExecuteReader(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            执行ExecuteReader
            </summary>
            <param name="cmd"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            执行ExecuteDataSet
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.ExecuteDataSet(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            执行ExecuteDataSet
            </summary>
            <param name="cmd"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.FromProc(System.String)">
            <summary>
            存储过程查询
            </summary>
            <param name="procName"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbSession.FromSql(System.String)">
            <summary>
            sql查询
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="P:Hxj.Data.DbSession.Db">
            <summary>
            Gets the db.
            </summary>
            <value>The db.</value>
        </member>
        <member name="P:Hxj.Data.DbSession.LeftToken">
            <summary>
            左边  
            <example>例如:sqlserver   的    [</example>
            </summary>
        </member>
        <member name="P:Hxj.Data.DbSession.RightToken">
            <summary>
            右边
            <example>例如:sqlserver   的    ]</example>
            </summary>
        </member>
        <member name="P:Hxj.Data.DbSession.ParamPrefix">
            <summary>
            参数前缀
            <example>例如:sqlserver 的     @</example>
            </summary>
        </member>
        <member name="T:Hxj.Data.Oracle.OracleProvider">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="M:Hxj.Data.Oracle.OracleProvider.CreatePageFromSection(Hxj.Data.FromSection,System.Int32,System.Int32)">
            <summary>
            创建分页查询
            </summary>
            <param name="fromSection"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Oracle.OracleProvider.PrepareCommand(System.Data.Common.DbCommand)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="T:Hxj.Data.FromSection`1">
            <summary>
            查询
            </summary>
            <typeparam name="T"></typeparam>    
        </member>
        <member name="T:Hxj.Data.FromSection">
            <summary>
            查询
            </summary>    
        </member>
        <member name="F:Hxj.Data.FromSection.startIndex">
            <summary>
            开始项
            </summary>
        </member>
        <member name="F:Hxj.Data.FromSection.endIndex">
            <summary>
            结束项
            </summary>
        </member>
        <member name="F:Hxj.Data.FromSection.timeout">
            <summary>
            缓存超时时间
            </summary>
        </member>
        <member name="F:Hxj.Data.FromSection.cacheDep">
            <summary>
            缓存依赖
            </summary>
        </member>
        <member name="F:Hxj.Data.FromSection.typeTableName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Hxj.Data.FromSection.isRefresh">
            <summary>
            是否重新加载
            </summary>
        </member>
        <member name="F:Hxj.Data.FromSection.isPageFromSection">
            <summary>
            是否已经执行过分页
            </summary>
        </member>
        <member name="F:Hxj.Data.FromSection.trans">
            <summary>
            事务   -- 查询
            </summary>
        </member>
        <member name="M:Hxj.Data.FromSection.#ctor(Hxj.Data.Database,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="database"></param>
            <param name="tableName"></param>
        </member>
        <member name="M:Hxj.Data.FromSection.#ctor(Hxj.Data.Database,System.String,System.Data.Common.DbTransaction)">
            <summary>
            构造函数
            </summary>
            <param name="database"></param>
            <param name="tableName"></param>
            <param name="trans"></param>
        </member>
        <member name="M:Hxj.Data.FromSection.isTurnonCache">
            <summary>
            是否开启缓存
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.isCustomerCache">
            <summary>
            判断是否用户自定义缓存策略
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.SetCacheTimeOut(System.Int32)">
            <summary>
            设置缓存有效期  单位：秒
            </summary>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.SetCacheDependency(System.Web.Caching.CacheDependency)">
            <summary>
            设置缓存依赖
            </summary>
            <param name="dep"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.Refresh">
            <summary>
            重新加载
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.Where(Hxj.Data.WhereClip)">
            <summary>
            whereclip
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.GroupBy(Hxj.Data.GroupByClip)">
            <summary>
            groupby
            </summary>
            <param name="groupBy"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.Having(Hxj.Data.WhereClip)">
            <summary>
            having条件
            </summary>
            <param name="havingWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.GroupBy(Hxj.Data.Field[])">
            <summary>
            groupby
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.OrderBy(Hxj.Data.OrderByClip)">
            <summary>
            orderby
            </summary>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.OrderBy(Hxj.Data.OrderByClip[])">
            <summary>
            orderby
            </summary>
            <param name="orderBys"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.Select(Hxj.Data.Field[])">
            <summary>
            select field
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.AddSelect(Hxj.Data.FromSection)">
            <summary>
            select sql
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.AddSelect(Hxj.Data.FromSection,System.String)">
            <summary>
            select sql
            </summary>
            <param name="fromSection"></param>
            <param name="aliasName">别名</param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.AddSelect(Hxj.Data.Field[])">
            <summary>
            add select field
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.Distinct">
            <summary>
            Distinct
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.Top(System.Int32)">
            <summary>
            Top
            </summary>
            <param name="topCount"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.Page(System.Int32,System.Int32)">
            <summary>
            Page
            </summary>
            <param name="pageSize">每页数</param>
            <param name="pageIndex">第几页</param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.From(System.Int32,System.Int32)">
            <summary>
            From startIndex to endIndex
            </summary>
            <param name="startIndex">开始记录数</param>
            <param name="endIndex">结束记录数</param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.formatSql(System.String,Hxj.Data.FromSection)">
            <summary>
            格式化sql语句
            </summary>
            <param name="sql"></param>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.Count">
            <summary>
            获取记录数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.Count(Hxj.Data.FromSection)">
            <summary>
            获取记录数(内部使用)
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.getCache(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.setCache``1(``0,System.String)">
            <summary>
            保存信息
            </summary>
            <param name="value"></param>
            <param name="cacheKey"></param>
        </member>
        <member name="M:Hxj.Data.FromSection.ToDataSet">
            <summary>
            To DataSet
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.getPagedFromSection">
            <summary>
            获取分页过的FromSection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.createDbCommand(Hxj.Data.FromSection)">
            <summary>
            创建  查询的DbCommand
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.ToDataReader">
            <summary>
            To DataReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.ToDataReader(Hxj.Data.FromSection)">
            <summary>
             To DataReader
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.ToDataTable">
            <summary>
            To DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.ToScalar">
            <summary>
            To Scalar
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.ToScalar``1">
            <summary>
            To Scalar
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.join(System.String,Hxj.Data.WhereClip,Hxj.Data.JoinType)">
            <summary>
            连接
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <param name="joinType"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.InnerJoin(System.String,Hxj.Data.WhereClip)">
            <summary>
            Inner Join
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.LeftJoin(System.String,Hxj.Data.WhereClip)">
            <summary>
            Left Join
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.RightJoin(System.String,Hxj.Data.WhereClip)">
            <summary>
            Right Join
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.CrossJoin(System.String,Hxj.Data.WhereClip)">
            <summary>
            Cross Join
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.FullJoin(System.String,Hxj.Data.WhereClip)">
            <summary>
            Full Join
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.Union(Hxj.Data.FromSection)">
            <summary>
            Union
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection.UnionAll(Hxj.Data.FromSection)">
            <summary>
            Union All
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="P:Hxj.Data.FromSection.DistinctString">
            <summary>
            设置 distinct
            </summary>
        </member>
        <member name="P:Hxj.Data.FromSection.PrefixString">
            <summary>
            前置值如 Top N
            </summary>
        </member>
        <member name="P:Hxj.Data.FromSection.LimitString">
            <summary>
            limit 
            </summary>
        </member>
        <member name="P:Hxj.Data.FromSection.CountSqlString">
            <summary>
            记录数sql语句 count
            </summary>
        </member>
        <member name="P:Hxj.Data.FromSection.SqlNoneOrderbyString">
            <summary>
            没有没有排序字段
            </summary>
        </member>
        <member name="P:Hxj.Data.FromSection.FromString">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hxj.Data.FromSection.Joins">
            <summary>
            连接信息
            </summary>
        </member>
        <member name="P:Hxj.Data.FromSection.SqlString">
            <summary>
            获取 sql语句
            </summary>
        </member>
        <member name="P:Hxj.Data.FromSection.TableName">
            <summary>
            返回  表名
            </summary>
        </member>
        <member name="P:Hxj.Data.FromSection.OrderByClip">
            <summary>
            返回  排序
            </summary>
        </member>
        <member name="P:Hxj.Data.FromSection.OrderByString">
            <summary>
            返回排序字符串  例如：orderby id desc
            </summary>
        </member>
        <member name="P:Hxj.Data.FromSection.GroupByClip">
            <summary>
            返回 分组
            </summary>
        </member>
        <member name="P:Hxj.Data.FromSection.GroupByString">
            <summary>
            返回排序字符串 例如：group by id
            </summary>
        </member>
        <member name="P:Hxj.Data.FromSection.WhereClip">
            <summary>
            返回 条件
            </summary>
        </member>
        <member name="P:Hxj.Data.FromSection.Parameters">
            <summary>
            返回 参数  (包含where 和 from)
            </summary>
        </member>
        <member name="P:Hxj.Data.FromSection.ColumnsString">
            <summary>
            返回  选择列
            </summary>
        </member>
        <member name="P:Hxj.Data.FromSection.Fields">
            <summary>
            查询的字段
            </summary>
        </member>
        <member name="M:Hxj.Data.FromSection`1.#ctor(Hxj.Data.Database)">
            <summary>
            构造函数
            </summary>
            <param name="database"></param>
        </member>
        <member name="M:Hxj.Data.FromSection`1.#ctor(Hxj.Data.Database,System.Data.Common.DbTransaction)">
            <summary>
            构造函数
            </summary>
            <param name="database"></param>
            <param name="trans"></param>
        </member>
        <member name="M:Hxj.Data.FromSection`1.InnerJoin``1(Hxj.Data.WhereClip)">
            <summary>
            Inner Join
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.CrossJoin``1(Hxj.Data.WhereClip)">
            <summary>
            Cross Join
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.RightJoin``1(Hxj.Data.WhereClip)">
            <summary>
            Right Join
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.LeftJoin``1(Hxj.Data.WhereClip)">
            <summary>
            Left Join
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.FullJoin``1(Hxj.Data.WhereClip)">
            <summary>
            Full Join
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.join(System.String,Hxj.Data.WhereClip,Hxj.Data.JoinType)">
            <summary>
            连接
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <param name="joinType"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.setPrimarykeyOrderby">
            <summary>
             设置默认主键排序 
            </summary>
        </member>
        <member name="M:Hxj.Data.FromSection`1.Having(Hxj.Data.WhereClip)">
            <summary>
            Having 
            </summary>
            <param name="havingWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.Where(Hxj.Data.WhereClip)">
            <summary>
            whereclip
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.GroupBy(Hxj.Data.GroupByClip)">
            <summary>
            groupby
            </summary>
            <param name="groupBy"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.GroupBy(Hxj.Data.Field[])">
            <summary>
            groupby
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.OrderBy(Hxj.Data.OrderByClip)">
            <summary>
            orderby
            </summary>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.OrderBy(Hxj.Data.OrderByClip[])">
            <summary>
            orderby
            </summary>
            <param name="orderBys"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.Select(Hxj.Data.Field[])">
            <summary>
            select field
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.Distinct">
            <summary>
            Distinct
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.Top(System.Int32)">
            <summary>
            Top
            </summary>
            <param name="topCount"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.Page(System.Int32,System.Int32)">
            <summary>
            Page
            </summary>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.setDefaultOrderby">
            <summary>
            设置默认排序
            </summary>
        </member>
        <member name="M:Hxj.Data.FromSection`1.From(System.Int32,System.Int32)">
            <summary>
            From  1-10
            </summary>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.SetCacheTimeOut(System.Int32)">
            <summary>
            设置缓存有效期  单位：秒
            </summary>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.SetCacheDependency(System.Web.Caching.CacheDependency)">
            <summary>
            设置缓存依赖
            </summary>
            <param name="dep"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.Refresh">
            <summary>
            重新加载
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.AddSelect(Hxj.Data.FromSection)">
            <summary>
            select sql
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.AddSelect(Hxj.Data.FromSection,System.String)">
            <summary>
            select sql
            </summary>
            <param name="fromSection"></param>
            <param name="aliasName">别名</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Hxj.Data.FromSection`1.ToList”忽略有格式错误的 XML 注释 -->
        <member name="M:Hxj.Data.FromSection`1.ToFirstDefault">
            <summary>
            返回第一个实体  如果为null，则默认实例化一个
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.ToFirst">
            <summary>
            返回第一个实体 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.Union(Hxj.Data.FromSection)">
            <summary>
            Union
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.FromSection`1.UnionAll(Hxj.Data.FromSection)">
            <summary>
            Union All
            </summary>        
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="T:Hxj.Data.JoinType">
            <summary>
            连接类型
            </summary>
        </member>
        <member name="F:Hxj.Data.JoinType.InnerJoin">
            <summary>
            InnerJoin
            </summary>
        </member>
        <member name="F:Hxj.Data.JoinType.LeftJoin">
            <summary>
            LeftJoin
            </summary>
        </member>
        <member name="F:Hxj.Data.JoinType.RightJoin">
            <summary>
            RightJoin
            </summary>
        </member>
        <member name="F:Hxj.Data.JoinType.CrossJoin">
            <summary>
            CrossJoin
            </summary>
        </member>
        <member name="F:Hxj.Data.JoinType.FullJoin">
            <summary>
            FullJoin
            </summary>
        </member>
        <member name="T:Hxj.Data.Database">
            <summary>
            Database
            </summary>
        </member>
        <member name="F:Hxj.Data.Database.Default">
            <summary>
            Default Database
            </summary>
        </member>
        <member name="M:Hxj.Data.Database.#ctor(Hxj.Data.DbProvider)">
            <summary>
            构造函数
            </summary>
            <param name="dbProvider"></param>
        </member>
        <member name="M:Hxj.Data.Database.WriteLog(System.Data.Common.DbCommand)">
            <summary>
            Writes the log.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Hxj.Data.Database.WriteLog(System.String)">
            <summary>
            Writes the log.
            </summary>
            <param name="logMsg">The log MSG.</param>
        </member>
        <member name="M:Hxj.Data.Database.CloseConnection(System.Data.Common.DbCommand)">
            <summary>
            Closes the connection.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Hxj.Data.Database.CloseConnection(System.Data.Common.DbConnection)">
            <summary>
            Closes the connection.
            </summary>
            <param name="conn">The conn.</param>
        </member>
        <member name="M:Hxj.Data.Database.CloseConnection(System.Data.Common.DbTransaction)">
            <summary>
            Closes the connection.
            </summary>
            <param name="tran">The tran.</param>
        </member>
        <member name="M:Hxj.Data.Database.GetConnection">
            <summary>
            Gets the connection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Database.GetConnection(System.Boolean)">
            <summary>
            Gets the connection.
            </summary>
            <param name="tryOpen">if set to <c>true</c> [try open].</param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Database.CreateConnection">
            <summary>
            <para>When overridden in a derived class, gets the connection for this database.</para>
            <seealso cref="T:System.Data.Common.DbConnection"/>        
            </summary>
            <returns>
            <para>The <see cref="T:System.Data.Common.DbConnection"/> for this database.</para>
            </returns>
        </member>
        <member name="M:Hxj.Data.Database.CreateConnection(System.Boolean)">
            <summary>
            <para>When overridden in a derived class, gets the connection for this database.</para>
            <seealso cref="T:System.Data.Common.DbConnection"/>        
            </summary>
            <returns>
            <para>The <see cref="T:System.Data.Common.DbConnection"/> for this database.</para>
            </returns>
        </member>
        <member name="M:Hxj.Data.Database.GetStoredProcCommand(System.String)">
            <summary>
            <para>When overridden in a derived class, creates a <see cref="T:System.Data.Common.DbCommand"/> for a stored procedure.</para>
            </summary>
            <param name="storedProcedureName"><para>The name of the stored procedure.</para></param>
            <returns><para>The <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure.</para></returns>       
        </member>
        <member name="M:Hxj.Data.Database.GetSqlStringCommand(System.String)">
            <summary>
            <para>When overridden in a derived class, creates an <see cref="T:System.Data.Common.DbCommand"/> for a SQL query.</para>
            </summary>
            <param name="query"><para>The text of the query.</para></param>        
            <returns><para>The <see cref="T:System.Data.Common.DbCommand"/> for the SQL query.</para></returns>        
        </member>
        <member name="M:Hxj.Data.Database.GetDataAdapter">
            <summary>
            Gets a DbDataAdapter with Standard update behavior.
            </summary>
            <returns>A <see cref="T:System.Data.Common.DbDataAdapter"/>.</returns>
            <seealso cref="T:System.Data.Common.DbDataAdapter"/>
        </member>
        <member name="M:Hxj.Data.Database.LoadDataSet(System.Data.Common.DbTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            <para>Loads a <see cref="T:System.Data.DataSet"/> from command text in a transaction.</para>
            </summary>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command in.</para>
            </param>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to fill.</para>
            </param>
            <param name="tableNames">
            <para>An array of table name mappings for the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
        </member>
        <member name="M:Hxj.Data.Database.ExecuteReader(System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType"/> and returns an <see cref="T:System.Data.IDataReader"></see> through which the result can be read.
            It is the responsibility of the caller to close the connection and reader when finished.</para>
            </summary>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>An <see cref="T:System.Data.IDataReader"/> object.</para>
            </returns>        
        </member>
        <member name="M:Hxj.Data.Database.ExecuteReader(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType"/> within the given 
            <paramref name="transaction"/> and returns an <see cref="T:System.Data.IDataReader"></see> through which the result can be read.
            It is the responsibility of the caller to close the connection and reader when finished.</para>
            </summary>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>An <see cref="T:System.Data.IDataReader"/> object.</para>
            </returns>        
        </member>
        <member name="M:Hxj.Data.Database.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String)">
            <summary>
            <para>Executes the <paramref name="command"/> and adds a new <see cref="T:System.Data.DataTable"></see> to the existing <see cref="T:System.Data.DataSet"></see>.</para>
            </summary>
            <param name="command">
            <para>The <see cref="T:System.Data.Common.DbCommand"/> to execute.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to load.</para>
            </param>
            <param name="tableName">
            <para>The name for the new <see cref="T:System.Data.DataTable"/> to add to the <see cref="T:System.Data.DataSet"/>.</para>
            </param>        
            <exception cref="T:System.ArgumentNullException">Any input parameter was <see langword="null"/> (<b>Nothing</b> in Visual Basic)</exception>
            <exception cref="T:System.ArgumentException">tableName was an empty string</exception>
        </member>
        <member name="M:Hxj.Data.Database.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String,System.Data.Common.DbTransaction)">
            <summary>
            <para>Executes the <paramref name="command"/> within the given <paramref name="transaction"/> and adds a new <see cref="T:System.Data.DataTable"></see> to the existing <see cref="T:System.Data.DataSet"></see>.</para>
            </summary>
            <param name="command">
            <para>The <see cref="T:System.Data.Common.DbCommand"/> to execute.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to load.</para>
            </param>
            <param name="tableName">
            <para>The name for the new <see cref="T:System.Data.DataTable"/> to add to the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>        
            <exception cref="T:System.ArgumentNullException">Any input parameter was <see langword="null"/> (<b>Nothing</b> in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">tableName was an empty string.</exception>
        </member>
        <member name="M:Hxj.Data.Database.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String[])">
            <summary>
            <para>Loads a <see cref="T:System.Data.DataSet"/> from a <see cref="T:System.Data.Common.DbCommand"/>.</para>
            </summary>
            <param name="command">
            <para>The command to execute to fill the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to fill.</para>
            </param>
            <param name="tableNames">
            <para>An array of table name mappings for the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
        </member>
        <member name="M:Hxj.Data.Database.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String[],System.Data.Common.DbTransaction)">
            <summary>
            <para>Loads a <see cref="T:System.Data.DataSet"/> from a <see cref="T:System.Data.Common.DbCommand"/> in  a transaction.</para>
            </summary>
            <param name="command">
            <para>The command to execute to fill the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to fill.</para>
            </param>
            <param name="tableNames">
            <para>An array of table name mappings for the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command in.</para>
            </param>
        </member>
        <member name="M:Hxj.Data.Database.LoadDataSet(System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            <para>Loads a <see cref="T:System.Data.DataSet"/> from command text.</para>
            </summary>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to fill.</para>
            </param>
            <param name="tableNames">
            <para>An array of table name mappings for the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
        </member>
        <member name="M:Hxj.Data.Database.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            <para>Executes the <paramref name="command"/> and returns the results in a new <see cref="T:System.Data.DataSet"/>.</para>
            </summary>
            <param name="command"><para>The <see cref="T:System.Data.Common.DbCommand"/> to execute.</para></param>
            <returns>A <see cref="T:System.Data.DataSet"/> with the results of the <paramref name="command"/>.</returns>        
        </member>
        <member name="M:Hxj.Data.Database.ExecuteDataSet(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            <para>Executes the <paramref name="command"/> as part of the <paramref name="transaction"/> and returns the results in a new <see cref="T:System.Data.DataSet"/>.</para>
            </summary>
            <param name="command"><para>The <see cref="T:System.Data.Common.DbCommand"/> to execute.</para></param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <returns>A <see cref="T:System.Data.DataSet"/> with the results of the <paramref name="command"/>.</returns>        
        </member>
        <member name="M:Hxj.Data.Database.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType"/> and returns the results in a new <see cref="T:System.Data.DataSet"/>.</para>
            </summary>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>A <see cref="T:System.Data.DataSet"/> with the results of the <paramref name="commandText"/>.</para>
            </returns>
        </member>
        <member name="M:Hxj.Data.Database.ExecuteDataSet(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> as part of the given <paramref name="transaction"/> and returns the results in a new <see cref="T:System.Data.DataSet"/>.</para>
            </summary>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>A <see cref="T:System.Data.DataSet"/> with the results of the <paramref name="commandText"/>.</para>
            </returns>
        </member>
        <member name="M:Hxj.Data.Database.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            <para>Executes the <paramref name="command"/> and returns the first column of the first row in the result set returned by the query. Extra columns or rows are ignored.</para>
            </summary>
            <param name="command">
            <para>The command that contains the query to execute.</para>
            </param>
            <returns>
            <para>The first column of the first row in the result set.</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Hxj.Data.Database.ExecuteScalar(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            <para>Executes the <paramref name="command"/> within a <paramref name="transaction"/>, and returns the first column of the first row in the result set returned by the query. Extra columns or rows are ignored.</para>
            </summary>
            <param name="command">
            <para>The command that contains the query to execute.</para>
            </param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <returns>
            <para>The first column of the first row in the result set.</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Hxj.Data.Database.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType"/>  and returns the first column of the first row in the result set returned by the query. Extra columns or rows are ignored.</para>
            </summary>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>The first column of the first row in the result set.</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Hxj.Data.Database.ExecuteScalar(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType"/> 
            within the given <paramref name="transaction"/> and returns the first column of the first row in the result set returned by the query. Extra columns or rows are ignored.</para>
            </summary>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>The first column of the first row in the result set.</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Hxj.Data.Database.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            <para>Executes the <paramref name="command"/> and returns the number of rows affected.</para>
            </summary>
            <param name="command">
            <para>The command that contains the query to execute.</para>
            </param>       
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Hxj.Data.Database.ExecuteNonQuery(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            <para>Executes the <paramref name="command"/> within the given <paramref name="transaction"/>, and returns the number of rows affected.</para>
            </summary>
            <param name="command">
            <para>The command that contains the query to execute.</para>
            </param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Hxj.Data.Database.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType"/> and returns the number of rows affected.</para>
            </summary>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>The number of rows affected.</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Hxj.Data.Database.ExecuteNonQuery(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType"/> as part of the given <paramref name="transaction"/> and returns the number of rows affected.</para>
            </summary>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>The number of rows affected</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Hxj.Data.Database.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            <para>Executes the <paramref name="command"/> and returns an <see cref="T:System.Data.IDataReader"></see> through which the result can be read.
            It is the responsibility of the caller to close the connection and reader when finished.</para>
            </summary>
            <param name="command">
            <para>The command that contains the query to execute.</para>
            </param>
            <returns>
            <para>An <see cref="T:System.Data.IDataReader"/> object.</para>
            </returns>        
        </member>
        <member name="M:Hxj.Data.Database.ExecuteReader(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            <para>Executes the <paramref name="command"/> within a transaction and returns an <see cref="T:System.Data.IDataReader"></see> through which the result can be read.
            It is the responsibility of the caller to close the connection and reader when finished.</para>
            </summary>
            <param name="command">
            <para>The command that contains the query to execute.</para>
            </param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <returns>
            <para>An <see cref="T:System.Data.IDataReader"/> object.</para>
            </returns>        
        </member>
        <member name="M:Hxj.Data.Database.BeginTransaction">
            <summary>
            Begins the transaction.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Database.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="il">The il.</param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Database.AddParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The command to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>
            <param name="size"><para>The maximum size of the data within the column.</para></param>
            <param name="direction"><para>One of the <see cref="T:System.Data.ParameterDirection"/> values.</para></param>
            <param name="nullable"><para>Avalue indicating whether the parameter accepts <see langword="null"/> (<b>Nothing</b> in Visual Basic) values.</para></param>
            <param name="precision"><para>The maximum number of digits used to represent the <paramref name="value"/>.</para></param>
            <param name="scale"><para>The number of decimal places to which <paramref name="value"/> is resolved.</para></param>
            <param name="sourceColumn"><para>The name of the source column mapped to the DataSet and used for loading or returning the <paramref name="value"/>.</para></param>
            <param name="sourceVersion"><para>One of the <see cref="T:System.Data.DataRowVersion"/> values.</para></param>
            <param name="value"><para>The value of the parameter.</para></param>       
        </member>
        <member name="M:Hxj.Data.Database.AddParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            <para>Adds a new instance of a <see cref="T:System.Data.Common.DbParameter"/> object to the command.</para>
            </summary>
            <param name="command">The command to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>        
            <param name="direction"><para>One of the <see cref="T:System.Data.ParameterDirection"/> values.</para></param>                
            <param name="sourceColumn"><para>The name of the source column mapped to the DataSet and used for loading or returning the <paramref name="value"/>.</para></param>
            <param name="sourceVersion"><para>One of the <see cref="T:System.Data.DataRowVersion"/> values.</para></param>
            <param name="value"><para>The value of the parameter.</para></param>    
        </member>
        <member name="M:Hxj.Data.Database.AddOutParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32)">
            <summary>
            Adds a new Out <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The command to add the out parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>        
            <param name="size"><para>The maximum size of the data within the column.</para></param>        
        </member>
        <member name="M:Hxj.Data.Database.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The command to add the in parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>                
            <remarks>
            <para>This version of the method is used when you can have the same parameter object multiple times with different values.</para>
            </remarks>        
        </member>
        <member name="M:Hxj.Data.Database.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Object)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The commmand to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>                
            <param name="value"><para>The value of the parameter.</para></param>      
        </member>
        <member name="M:Hxj.Data.Database.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The commmand to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>       
            <param name="size">size</param>
            <param name="value"><para>The value of the parameter.</para></param>      
        </member>
        <member name="M:Hxj.Data.Database.AddInParameter(System.Data.Common.DbCommand,System.String,System.Object)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The commmand to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="value"><para>The value of the parameter.</para></param>      
        </member>
        <member name="M:Hxj.Data.Database.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.String,System.Data.DataRowVersion)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The command to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>                
            <param name="sourceColumn"><para>The name of the source column mapped to the DataSet and used for loading or returning the value.</para></param>
            <param name="sourceVersion"><para>One of the <see cref="T:System.Data.DataRowVersion"/> values.</para></param>
        </member>
        <member name="M:Hxj.Data.Database.AddInputOutputParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a new In and Out
            </summary>
            <param name="command"></param>
            <param name="name"></param>
            <param name="dbType"></param>
            <param name="value"></param>
            <param name="size"></param>
        </member>
        <member name="M:Hxj.Data.Database.AddReturnValueParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32)">
            <summary>
            Adds a new return
            </summary>
            <param name="command"></param>
            <param name="name"></param>
            <param name="dbType"></param>
            <param name="size"></param>
        </member>
        <member name="M:Hxj.Data.Database.AddParameter(System.Data.Common.DbCommand,System.Data.Common.DbParameter[])">
            <summary>
            Adds parameters
            </summary>
            <param name="command"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:Hxj.Data.Database.AddCommandParameter(System.Data.Common.DbCommand,Hxj.Data.Parameter[])">
            <summary>
            给命令添加参数  where paramters
            </summary>
            <param name="command"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Database.BeginBatchConnection">
            <summary>
            Begins the batch connection.   the default size of the batch is 10.
            </summary>
        </member>
        <member name="M:Hxj.Data.Database.BeginBatchConnection(System.Int32)">
            <summary>
            Begins the batch connection.
            </summary>
            <param name="batchSize">Size of the batch.</param>
        </member>
        <member name="M:Hxj.Data.Database.BeginBatchConnection(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            Begins the batch connection.
            </summary>
            <param name="batchSize">Size of the batch.</param>
            <param name="tran">The tran.</param>
        </member>
        <member name="M:Hxj.Data.Database.BeginBatchConnection(System.Int32,System.Data.IsolationLevel)">
            <summary>
            Begins the batch connection.
            </summary>
            <param name="batchSize">Size of the batch.</param>
            <param name="il">The il.</param>
        </member>
        <member name="M:Hxj.Data.Database.EndBatchConnection">
            <summary>
            Ends the batch connection.
            </summary>
        </member>
        <member name="M:Hxj.Data.Database.ExecutePendingBatchOperations">
            <summary>
            Executes the pending batch operations.
            </summary>
        </member>
        <member name="P:Hxj.Data.Database.ConnectionString">
            <summary>
            Gets the connect string.
            </summary>
            <value>The connect string.</value>
        </member>
        <member name="P:Hxj.Data.Database.DbProviderFactory">
            <summary>
            Gets the DbProviderFactory
            </summary>
        </member>
        <member name="P:Hxj.Data.Database.DbProvider">
            <summary>
            Gets the db provider.
            </summary>
            <value>The db provider.</value>
        </member>
        <member name="E:Hxj.Data.Database.OnLog">
            <summary>
            OnLog event.
            </summary>
        </member>
        <member name="P:Hxj.Data.Database.IsBatchConnection">
            <summary>
            Gets a value indicating whether this instance is batch connection.
            </summary>
            <value>
            	<c>true</c> if this instance is batch connection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Hxj.Data.WhereClip">
            <summary>
            条件
            </summary>
        </member>
        <member name="F:Hxj.Data.WhereClip.All">
            <summary>
            All
            </summary>
        </member>
        <member name="M:Hxj.Data.WhereClip.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hxj.Data.WhereClip.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:Hxj.Data.WhereClip.#ctor(System.String,Hxj.Data.Parameter[])">
            <summary>
            
            </summary>
            <param name="customWhereString"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Hxj.Data.WhereClip.#ctor(Hxj.Data.Field,System.Object,Hxj.Data.QueryOperator)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <param name="oper"></param>
        </member>
        <member name="M:Hxj.Data.WhereClip.op_Implicit(System.String)~Hxj.Data.WhereClip">
            <summary>
            隐式转换
            </summary>
            <param name="whereString"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.WhereClip.Equals(Hxj.Data.WhereClip,Hxj.Data.WhereClip)">
            <summary>
            判断条件是否一样
            </summary>
            <param name="leftWhere"></param>
            <param name="rightWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.WhereClip.IsNullOrEmpty(Hxj.Data.WhereClip)">
            <summary>
            判断 WhereClip  是否为null
            </summary>
            <param name="whereClip"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.WhereClip.And(Hxj.Data.WhereClip)">
            <summary>
            And
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.WhereClip.Or(Hxj.Data.WhereClip)">
            <summary>
            Or
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.WhereClip.op_True(Hxj.Data.WhereClip)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.WhereClip.op_False(Hxj.Data.WhereClip)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.WhereClip.op_BitwiseAnd(Hxj.Data.WhereClip,Hxj.Data.WhereClip)">
            <summary>
            And
            </summary>
            <param name="leftWhere"></param>
            <param name="rightWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.WhereClip.op_BitwiseOr(Hxj.Data.WhereClip,Hxj.Data.WhereClip)">
            <summary>
            Or
            </summary>
            <param name="leftWhere"></param>
            <param name="rightWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.WhereClip.op_LogicalNot(Hxj.Data.WhereClip)">
            <summary>
            not
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.WhereClip.Exists(Hxj.Data.FromSection)">
            <summary>
            EXISTS
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="P:Hxj.Data.WhereClip.Where">
            <summary>
            返回  where
            </summary>
        </member>
        <member name="P:Hxj.Data.WhereClip.WhereString">
            <summary>
            WhereString    
            <example>
            where 1=1
            </example>
            </summary>
        </member>
        <member name="T:Hxj.Data.WhereClipBuilder">
            <summary>
            WhereClipBuilder
            </summary>
        </member>
        <member name="F:Hxj.Data.WhereClipBuilder.expressionStringBuilder">
            <summary>
            条件字符串
            </summary>
        </member>
        <member name="F:Hxj.Data.WhereClipBuilder.parameters">
            <summary>
            条件参数
            </summary>
        </member>
        <member name="M:Hxj.Data.WhereClipBuilder.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Hxj.Data.WhereClipBuilder.#ctor(Hxj.Data.WhereClip)">
            <summary>
            构造函数
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:Hxj.Data.WhereClipBuilder.And(Hxj.Data.WhereClip)">
            <summary>
            AND
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:Hxj.Data.WhereClipBuilder.Or(Hxj.Data.WhereClip)">
            <summary>
            Or
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:Hxj.Data.WhereClipBuilder.ToWhereClip">
            <summary>
            转换成WhereClip
            </summary>
            <returns></returns>
        </member>
        <member name="T:Hxj.Data.DbTrans">
            <summary>
            事务
            </summary>
        </member>
        <member name="F:Hxj.Data.DbTrans.trans">
            <summary>
            事务
            </summary>
        </member>
        <member name="F:Hxj.Data.DbTrans.conn">
            <summary>
            连接
            </summary>
        </member>
        <member name="F:Hxj.Data.DbTrans.dbSession">
            <summary>
            
            </summary>
        </member>
        <member name="F:Hxj.Data.DbTrans.isCommitOrRollback">
            <summary>
            判断是否有提交或回滚
            </summary>
        </member>
        <member name="F:Hxj.Data.DbTrans.isClose">
            <summary>
            是否关闭
            </summary>
        </member>
        <member name="M:Hxj.Data.DbTrans.#ctor(System.Data.Common.DbTransaction,Hxj.Data.DbSession)">
            <summary>
            构造函数
            </summary>
            <param name="trans"></param>
            <param name="dbSession"></param>
        </member>
        <member name="M:Hxj.Data.DbTrans.Commit">
            <summary>
            提交
            </summary>
        </member>
        <member name="M:Hxj.Data.DbTrans.Rollback">
            <summary>
            回滚
            </summary>
        </member>
        <member name="M:Hxj.Data.DbTrans.op_Implicit(Hxj.Data.DbTrans)~System.Data.Common.DbTransaction">
            <summary>
            隐式转换
            </summary>
            <param name="dbTrans"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbTrans.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:Hxj.Data.DbTrans.Dispose">
            <summary>
            关闭连接并释放资源
            </summary>
        </member>
        <member name="M:Hxj.Data.DbTrans.FromSql(System.String)">
            <summary>
            FromSql
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbTrans.FromPro(System.String)">
            <summary>
            FromPro
            </summary>
            <param name="proName"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbTrans.From``1">
            <summary>
            查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbTrans.From(System.String)">
            <summary>
            查询
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbTrans.UpdateAll``1(``0[])">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Hxj.Data.DbTrans.UpdateAll``1(``0)">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Hxj.Data.DbTrans.UpdateAll``1(``0,Hxj.Data.WhereClip)">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbTrans.Update``1(``0[])">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Hxj.Data.DbTrans.Update``1(``0)">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Hxj.Data.DbTrans.Update``1(``0,Hxj.Data.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbTrans.Update``1(Hxj.Data.Field,System.Object,Hxj.Data.WhereClip)">
            <summary>
            更新单个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbTrans.Update``1(System.Collections.Generic.Dictionary{Hxj.Data.Field,System.Object},Hxj.Data.WhereClip)">
            <summary>
            更新多个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldValue"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbTrans.Update``1(Hxj.Data.Field[],System.Object[],Hxj.Data.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbTrans.Delete``1(``0)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbTrans.Delete``1(System.Object[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbTrans.Delete``1(System.String[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbTrans.Delete``1(Hxj.Data.WhereClip)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbTrans.Insert``1(``0[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbTrans.Insert``1(``0)">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.DbTrans.Insert``1(Hxj.Data.Field[],System.Object[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="P:Hxj.Data.DbTrans.Connection">
            <summary>
            连接
            </summary>
        </member>
        <member name="P:Hxj.Data.DbTrans.IsolationLevel">
            <summary>
            事务级别
            </summary>
        </member>
        <member name="T:Hxj.Data.Cache">
            <summary>
            简单缓存处理类
            </summary>
        </member>
        <member name="F:Hxj.Data.Cache.Default">
            <summary>
            默认cache实例
            </summary>
        </member>
        <member name="F:Hxj.Data.Cache.hxjCache">
            <summary>
            cache
            </summary>
        </member>
        <member name="F:Hxj.Data.Cache._timeOut">
            <summary>
            timeout 600秒
            </summary>
        </member>
        <member name="M:Hxj.Data.Cache.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hxj.Data.Cache.#ctor(System.Int32)">
            <summary>
            设置过期时间
            </summary>
            <param name="timeOut"></param>
        </member>
        <member name="M:Hxj.Data.Cache.AddCache(System.String,System.Object)">
            <summary>
            添加缓存 (绝对有效期)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
        </member>
        <member name="M:Hxj.Data.Cache.AddCache(System.String,System.Object,System.Int32)">
            <summary>
            添加缓存 (绝对有效期)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
            <param name="timeout">绝对有效期（单位: 秒）</param>
        </member>
        <member name="M:Hxj.Data.Cache.AddCacheSlidingExpiration(System.String,System.Object)">
            <summary>
            添加缓存 (相对有效期)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
        </member>
        <member name="M:Hxj.Data.Cache.AddCacheSlidingExpiration(System.String,System.Object,System.Int32)">
            <summary>
            添加缓存 (相对有效期)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
            <param name="timeout">相对过期时间 (单位: 秒)</param>
        </member>
        <member name="M:Hxj.Data.Cache.AddCacheFilesDependency(System.String,System.Object,System.String[])">
            <summary>
            添加缓存 (文件依赖)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
            <param name="filenames">缓存依赖的文件或目录</param>
        </member>
        <member name="M:Hxj.Data.Cache.AddCacheDependency(System.String,System.Object,System.Int32,System.Web.Caching.CacheDependency)">
            <summary>
            添加缓存 (文件依赖)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
            <param name="timeout">绝对过期时间 （单位：秒）</param>
            <param name="dep">缓存依赖</param>
        </member>
        <member name="M:Hxj.Data.Cache.AddCacheKeysDependency(System.String,System.Object,System.String[])">
            <summary>
            添加缓存 (一组键值依赖)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
            <param name="cachekeys">一组缓存键，此改变缓存也失效</param>
        </member>
        <member name="M:Hxj.Data.Cache.onRemove(System.String,System.Object,System.Web.Caching.CacheItemRemovedReason)">
            <summary>
            缓存删除的委托实例
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <param name="reason"></param>
        </member>
        <member name="M:Hxj.Data.Cache.RemoveCache(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="cacheKey">缓存键值</param>
        </member>
        <member name="M:Hxj.Data.Cache.GetCache(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="cacheKey">对象的关键字</param>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Cache.GetCount">
            <summary>
            获取缓存数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Cache.GetCacheKeys">
            <summary>
            返回缓存键值列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hxj.Data.Cache.ClearAll">
            <summary>
            清空所有缓存
            </summary>
        </member>
        <member name="P:Hxj.Data.Cache.TimeOut">
            <summary>
            time out (seconds)   
            
            <![CDATA[if timeout <=0,the cache expiration time is maxvalue]]>
            
            </summary>
        </member>
        <member name="T:Hxj.Data.FastInvokeHandler">
            <summary>Delegate for calling a method that is not known at runtime.</summary>
            <param name="target">the object to be called or null if the call is to a static method.</param>
            <param name="paramters">the parameters to the method.</param>
            <returns>the return value for the method or null if it doesn't return anything.</returns>
        </member>
        <member name="T:Hxj.Data.FastCreateInstanceHandler">
            <summary>Delegate for creating and object at runtime using the default constructor.</summary>
            <returns>the newly created object.</returns>
        </member>
        <member name="T:Hxj.Data.FastPropertyGetHandler">
            <summary>Delegate to get an arbitraty property at runtime.</summary>
            <param name="target">the object instance whose property will be obtained.</param>
            <returns>the property value.</returns>
        </member>
        <member name="T:Hxj.Data.FastPropertySetHandler">
            <summary>Delegate to set an arbitrary property at runtime.</summary>
            <param name="target">the object instance whose property will be modified.</param>
            <param name="parameter"></param>
        </member>
        <member name="T:Hxj.Data.DynamicCalls">
            <summary>Class with helper methods for dynamic invocation generating IL on the fly.</summary>
        </member>
        <member name="F:Hxj.Data.DynamicCalls.dictInvoker">
            <summary>
            用于存放GetMethodInvoker的Dictionary
            </summary>
        </member>
        <member name="F:Hxj.Data.DynamicCalls.dictCreator">
            <summary>
            用于存放GetInstanceCreator的Dictionary
            </summary>
        </member>
        <member name="M:Hxj.Data.DynamicCalls.GetInstanceCreator(System.Type)">
            <summary>Gets the instance creator delegate that can be use to create instances of the specified type.</summary>
            <param name="type">The type of the objects we want to create.</param>
            <returns>A delegate that can be used to create the objects.</returns>
        </member>
        <member name="F:Hxj.Data.DynamicCalls.dictGetter">
            <summary>
            用于存放GetPropertyGetter的Dictionary
            </summary>
        </member>
        <member name="F:Hxj.Data.DynamicCalls.dictSetter">
            <summary>
            用于存放SetPropertySetter的Dictionary
            </summary>
        </member>
        <member name="M:Hxj.Data.DynamicCalls.EmitCastToReference(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>Emits the cast to a reference, unboxing if needed.</summary>
            <param name="il">The MSIL generator.</param>
            <param name="type">The type to cast.</param>
        </member>
        <member name="M:Hxj.Data.DynamicCalls.EmitBoxIfNeeded(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>Boxes a type if needed.</summary>
            <param name="ilGenerator">The MSIL generator.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Hxj.Data.DynamicCalls.EmitFastInt(System.Reflection.Emit.ILGenerator,System.Int32)">
            <summary>Emits code to save an integer to the evaluation stack.</summary>
            <param name="ilGeneartor">The MSIL generator.</param>
            <param name="value">The value to push.</param>
        </member>
    </members>
</doc>
